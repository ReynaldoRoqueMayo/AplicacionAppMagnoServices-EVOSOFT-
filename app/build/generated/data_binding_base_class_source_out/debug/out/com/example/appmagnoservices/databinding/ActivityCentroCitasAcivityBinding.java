// Generated by view binder compiler. Do not edit!
package com.example.appmagnoservices.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.CalendarView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appmagnoservices.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCentroCitasAcivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AutoCompleteTextView acHora;

  @NonNull
  public final AutoCompleteTextView acLocal;

  @NonNull
  public final AutoCompleteTextView acServicio;

  @NonNull
  public final MaterialButton btnRealizarCita;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final TextInputEditText edtDescripcion;

  @NonNull
  public final TextInputLayout tfLayLocal;

  @NonNull
  public final MaterialTextView tvDescripcionEdt;

  @NonNull
  public final MaterialTextView tvHorarioSelecc;

  @NonNull
  public final MaterialTextView tvLocalSelecc;

  @NonNull
  public final MaterialTextView tvServicioSelect;

  @NonNull
  public final TextView tvTittleCitas;

  private ActivityCentroCitasAcivityBinding(@NonNull RelativeLayout rootView,
      @NonNull AutoCompleteTextView acHora, @NonNull AutoCompleteTextView acLocal,
      @NonNull AutoCompleteTextView acServicio, @NonNull MaterialButton btnRealizarCita,
      @NonNull CalendarView calendarView, @NonNull TextInputEditText edtDescripcion,
      @NonNull TextInputLayout tfLayLocal, @NonNull MaterialTextView tvDescripcionEdt,
      @NonNull MaterialTextView tvHorarioSelecc, @NonNull MaterialTextView tvLocalSelecc,
      @NonNull MaterialTextView tvServicioSelect, @NonNull TextView tvTittleCitas) {
    this.rootView = rootView;
    this.acHora = acHora;
    this.acLocal = acLocal;
    this.acServicio = acServicio;
    this.btnRealizarCita = btnRealizarCita;
    this.calendarView = calendarView;
    this.edtDescripcion = edtDescripcion;
    this.tfLayLocal = tfLayLocal;
    this.tvDescripcionEdt = tvDescripcionEdt;
    this.tvHorarioSelecc = tvHorarioSelecc;
    this.tvLocalSelecc = tvLocalSelecc;
    this.tvServicioSelect = tvServicioSelect;
    this.tvTittleCitas = tvTittleCitas;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCentroCitasAcivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCentroCitasAcivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_centro_citas_acivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCentroCitasAcivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acHora;
      AutoCompleteTextView acHora = ViewBindings.findChildViewById(rootView, id);
      if (acHora == null) {
        break missingId;
      }

      id = R.id.acLocal;
      AutoCompleteTextView acLocal = ViewBindings.findChildViewById(rootView, id);
      if (acLocal == null) {
        break missingId;
      }

      id = R.id.acServicio;
      AutoCompleteTextView acServicio = ViewBindings.findChildViewById(rootView, id);
      if (acServicio == null) {
        break missingId;
      }

      id = R.id.btnRealizarCita;
      MaterialButton btnRealizarCita = ViewBindings.findChildViewById(rootView, id);
      if (btnRealizarCita == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.edtDescripcion;
      TextInputEditText edtDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (edtDescripcion == null) {
        break missingId;
      }

      id = R.id.tfLayLocal;
      TextInputLayout tfLayLocal = ViewBindings.findChildViewById(rootView, id);
      if (tfLayLocal == null) {
        break missingId;
      }

      id = R.id.tvDescripcionEdt;
      MaterialTextView tvDescripcionEdt = ViewBindings.findChildViewById(rootView, id);
      if (tvDescripcionEdt == null) {
        break missingId;
      }

      id = R.id.tvHorarioSelecc;
      MaterialTextView tvHorarioSelecc = ViewBindings.findChildViewById(rootView, id);
      if (tvHorarioSelecc == null) {
        break missingId;
      }

      id = R.id.tvLocalSelecc;
      MaterialTextView tvLocalSelecc = ViewBindings.findChildViewById(rootView, id);
      if (tvLocalSelecc == null) {
        break missingId;
      }

      id = R.id.tvServicioSelect;
      MaterialTextView tvServicioSelect = ViewBindings.findChildViewById(rootView, id);
      if (tvServicioSelect == null) {
        break missingId;
      }

      id = R.id.tvTittleCitas;
      TextView tvTittleCitas = ViewBindings.findChildViewById(rootView, id);
      if (tvTittleCitas == null) {
        break missingId;
      }

      return new ActivityCentroCitasAcivityBinding((RelativeLayout) rootView, acHora, acLocal,
          acServicio, btnRealizarCita, calendarView, edtDescripcion, tfLayLocal, tvDescripcionEdt,
          tvHorarioSelecc, tvLocalSelecc, tvServicioSelect, tvTittleCitas);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
